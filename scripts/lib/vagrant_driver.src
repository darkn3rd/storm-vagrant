#!/bin/sh
# NAME: storm_vagrant.src
# AUTHOR: Joaquin Menchaca
# CREATED: 2016-05-01
#
# PURPOSE: Vagrant orchestration script for orchestrating components across
#  whole Apache Storm cluster.
# DEPENDENCIES:
#  * Vagrant environment
#  * Ubuntu 14.04 Trusty Tahr guest systems
#
# FUNCTIONS LIST:
#   * setup_maven()
#   * setup_proxy()
#   * setup_storm()
#   * setup_zookeeper()

#######
# setup_zookeeper()
#
# notes: installs and configures zookeeper service
#  for 1 or more zookeeper cluster
##########################################
setup_zookeeper() {
  ##################### LIBRARIES #####################
  . ${SCRIPTLIB}/base.src
  . ${SCRIPTLIB}/zookeeper.src

  ##################### VARIABLES #####################
  STORM_ENV=${STORM_ENV:-"default"}
  STORM_VERSION=${1:-"1"}
  STORM_MAJOR_VERSION=$(echo ${STORM_VERSION} | grep -o '^[0-9]*')
  CONFIGFILE="/vagrant/config/${STORM_MAJOR_VERSION}/${STORM_ENV}.hosts"
  ZOOKEEPER_SRVR=$(get_hostname ${CONFIGFILE} zookeeper) # fetch zookeeper srvrs

  ##################### MAVEN SETUP #####################
  install_zookeper
  config_zookeeper ${ZOOKEEPER_SRVR}
}

#######
# setup_maven()
#
# description: installs maven on vagrant environment
##########################################
setup_maven() {
  # optionally install maven if indicated for install
  HOSTNAME_FQDN=$(hostname -f)
  grep "${HOSTNAME_FQDN}" ${CONFIGFILE} | grep -q "maven" || return 0

  ##################### LIBRARIES #####################
  . ${SCRIPTLIB}/maven.src
  . ${SCRIPTLIB}/java.src
  . ${SCRIPTLIB}/storm.src

  ##################### VARIABLES #####################
  # Fetch, Install, Configure
  PACKAGE_LOCATION="/vagrant/scripts/packages"
  MAVEN_VERSION=${1-"3.3.9"}

  ##################### MAVEN SETUP #####################
  fetch_maven_package "${MAVEN_VERSION}"
  install_java8
  install_maven "${MAVEN_VERSION}"

}

#######
# setup_storm()
#
# description: installs storm on vagrant environment
# notes:
#   * systems will have to have 'nimbus' or 'supervisor' in the hostname
#   * server designated as primary will have the 'storm ui' service, which
#       is the nimbus server
#   * storm 0.9.x has the following:
#       * nimbus.dev - nimbus, ui
#       * supervisor{1..2}.dev - supervisor, logviewer
#   * storm 1.0.x+
#       * nimbus.dev - nimbus, ui, logviewer
#       * nimbus1.dev - nimbus, logviewer
#       * supervisor{1..2}.dev - supervisor, logviewer
##########################################
setup_storm() {
  ##################### LIBRARIES #####################
  . ${SCRIPTLIB}/storm.src
  . ${SCRIPTLIB}/java.src
  . ${SCRIPTLIB}/base.src

  ##################### VARIABLES #####################
  STORM_ENV=${STORM_ENV:-"default"}
  STORM_MAJOR_VERSION=$(echo ${STORM_VERSION} | grep -o '^[0-9]*')
  CONFIGFILE="/vagrant/config/${STORM_MAJOR_VERSION}/${STORM_ENV}.hosts"

  PACKAGE_LOCATION="/vagrant/scripts/packages"
  STORM_VERSION=${1-"1.0.2"}
  STORM_HOME="/usr/lib/apache/storm/${STORM_VERSION}"
  STORM_LOCAL_DIR="/app/storm"

  ##################### JAVA SETUP #####################
  install_java8

  ##################### APACHE-STORM SETUP #####################
  ZOOKEEPER_SRVR=$(get_hostname ${CONFIGFILE} zookeeper) # fetch zookeeper srvrs
  NIMBUS_SRVR=$(get_hostname ${CONFIGFILE} nimbus)       # fetch nimbus srvrs

  # Prerequisites
  [ -d ${PACKAGE_LOCATION} ] || mkdir -vp ${PACKAGE_LOCATION}
  fetch_storm_package "${STORM_VERSION}"

  # Storm Installation
  create_user "storm"
  create_local_dir
  install_storm "${STORM_VERSION}"
  configure_storm "${STORM_HOME}/conf"

  ##################### SUPERVISORD SETUP #####################
  # setup up initial designated configuration
  NIMBUS_SERVICES="nimbus"

  # designate 'storm ui' on primary system
  PRIMARY_SRVR=$(grep primary ${CONFIGFILE} | awk '{ print $2 }')
  HOSTNAME_FQDN=$(/bin/hostname -f)
  if [ ${HOSTNAME_FQDN} = ${PRIMARY_SRVR} ]; then
    NIMBUS_SERVICES="${NIMBUS_SERVICES} ui"
  fi

  # designate 'storm logviewer' server if Storm 1.x
  if [ ${STORM_MAJOR_VERSION} -ge 1 ]; then
    NIMBUS_SERVICES="${NIMBUS_SERVICES} logviewer"
  fi

  # install and configure supervisord service manager
  case ${HOSTNAME_FQDN} in
    *nimbus*)
      setup_storm_supervisord "${NIMBUS_SERVICES}"
      ;;
    *supervisor*)
      setup_storm_supervisord "supervisor logviewer"
      ;;
  esac

}

#######
# setup_proxy()
#
# notes: setup reverse proxy server with routes back to storm servers
##########################################
setup_proxy() {
  ##################### VARIABLES #####################
  STORM_ENV=${STORM_ENV:-"default"}
  STORM_MAJOR_VERSION=$(echo ${STORM_VERSION} | grep -o '^[0-9]*')
  CONFIGFILE="/vagrant/config/${STORM_MAJOR_VERSION}/${STORM_ENV}.hosts"

  # check that configuration file exists
  [ -e ${CONFIGFILE} ] || \
    { echo "ERROR: ${CONFIGFILE} doesn't exist."; return 2; }

  SCRIPT_PATH="/vagrant/scripts"
  SCRIPTLIB="${SCRIPT_PATH}/lib"

  HOSTNAME_FQDN=$(hostname -f)
  # optionally install reverse-proxy if indicated for install
  grep "${HOSTNAME_FQDN}" ${CONFIGFILE} | grep -q "proxy" || return 0

  ##################### LIBRARIES #####################
  . ${SCRIPTLIB}/nginx.src  # install_nginx(), remote_site(), enable_site()
  . ${SCRIPTLIB}/base.src   # get_ipaddress()

  ##################### NGINX REVERSE-PROXY SETUP #####################
  # Install nginx from vendor PPA
  install_nginx
  # Remove Default Site
  remove_site 'default'

  ##################### MAIN EDGE SITE #####################
  # Configure and Enable Primary Edge Site (80->8080)
  PRIMARY_SRVR=$(grep primary ${CONFIGFILE} | awk '{ print $2 }')
  create_site 80 "http://$(get_ipaddress ${CONFIGFILE} ${PRIMARY_SRVR}):8080" 'storm.dev' "${PRIMARY_SRVR}"
  enable_site 'storm.dev'

  ##################### LOGVIEWER SITES #####################
  NIMBUS_SRVR=$(get_hostname ${CONFIGFILE} nimbus)
  SUPERVISOR_SRVR=$(get_hostname ${CONFIGFILE} supervisor)

  # Logviewer serves go on nimbus for Apache 1.x
  if [ ${STORM_MAJOR_VERSION} -lt 1 ]; then
    LOGVIEWER_SRVR=${SUPERVISOR_SRVR}
  elif [ ${STORM_MAJOR_VERSION} -ge 1 ]; then
    LOGVIEWER_SRVR="${SUPERVISOR_SRVR} ${NIMBUS_SRVR}"
  fi

  # Install Logviewer Route (8000->8000)
  for SRVR in ${LOGVIEWER_SRVR}; do
    create_site 8000 "http://$(get_ipaddress ${CONFIGFILE} ${SRVR}):8000" "${SRVR}"
    enable_site "${SRVR}"
  done

  service nginx restart

}
